{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/treinamento01/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  _s();\n\n  const [weather, setWeather] = useState(false);\n  const [location, setLocation] = useState(false);\n\n  let getWeather = async (lat, long) => {\n    let res = await axios.get(\"http://api.openweathermap.org/data/2.5/weather\", {\n      params: {\n        lat: lat,\n        lon: long,\n        appid: process.env.REACT_APP_OPEN_WHEATHER_KEY,\n        lang: 'pt',\n        units: 'metric'\n      }\n    });\n    setWeather(res.data);\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      getWeather(position.coords.latitude, position.coords.longitude);\n      setLocation(true);\n    });\n  }, []);\n\n  if (location === false) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"Voc\\xEA precisa habilitar a localiza\\xE7\\xE3o no browser o/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  } else if (weather === false) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"Carregando o clima...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Clima nas suas Coordenadas (\", weather['weather'][0]['description'], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperatura atual: \", weather['main']['temp'], \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperatura m\\xE1xima: \", weather['main']['temp_max'], \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperatura minima: \", weather['main']['temp_min'], \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Press\\xE3o: \", weather['main']['pressure'], \" hpa\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Humidade: \", weather['main']['humidity'], \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"sbRVJBeaxc3eQZ/wmhpm+WTLRgA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/var/www/treinamento01/src/App.js"],"names":["React","Fragment","useEffect","useState","axios","App","weather","setWeather","location","setLocation","getWeather","lat","long","res","get","params","lon","appid","process","env","REACT_APP_OPEN_WHEATHER_KEY","lang","units","data","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;;AAEA,MAAIO,UAAU,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AACpC,QAAIC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,gDAAV,EAA4D;AAC1EC,MAAAA,MAAM,EAAE;AACNJ,QAAAA,GAAG,EAAEA,GADC;AAENK,QAAAA,GAAG,EAAEJ,IAFC;AAGNK,QAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,2BAHb;AAINC,QAAAA,IAAI,EAAE,IAJA;AAKNC,QAAAA,KAAK,EAAE;AALD;AADkE,KAA5D,CAAhB;AASAf,IAAAA,UAAU,CAACM,GAAG,CAACU,IAAL,CAAV;AACD,GAXD;;AAcArB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrDjB,MAAAA,UAAU,CAACiB,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,EAA2BF,QAAQ,CAACC,MAAT,CAAgBE,SAA3C,CAAV;AACArB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,MAAID,QAAQ,KAAK,KAAjB,EAAwB;AACtB,wBACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO,IAAIF,OAAO,KAAK,KAAhB,EAAuB;AAC5B,wBACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GANM,MAMA;AACL,wBACE,QAAC,QAAD;AAAA,8BACE;AAAA,mDAAiCA,OAAO,CAAC,SAAD,CAAP,CAAmB,CAAnB,EAAsB,aAAtB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,gCACE;AAAA,4CAAwBA,OAAO,CAAC,MAAD,CAAP,CAAgB,MAAhB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,gDAAyBA,OAAO,CAAC,MAAD,CAAP,CAAgB,UAAhB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,6CAAyBA,OAAO,CAAC,MAAD,CAAP,CAAgB,UAAhB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,qCAAcA,OAAO,CAAC,MAAD,CAAP,CAAgB,UAAhB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,mCAAeA,OAAO,CAAC,MAAD,CAAP,CAAgB,UAAhB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;AACF;;GApDQD,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { Fragment, useEffect, useState } from 'react';\n\nimport axios from 'axios';\n\nfunction App() {\n  const [weather, setWeather] = useState(false);\n  const [location, setLocation] = useState(false);\n\n  let getWeather = async (lat, long) => {\n    let res = await axios.get(\"http://api.openweathermap.org/data/2.5/weather\", {\n      params: {\n        lat: lat,\n        lon: long,\n        appid: process.env.REACT_APP_OPEN_WHEATHER_KEY,\n        lang: 'pt',\n        units: 'metric'\n      }\n    });\n    setWeather(res.data);\n  }\n\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      getWeather(position.coords.latitude, position.coords.longitude);\n      setLocation(true)\n    })\n  }, [])\n\n  if (location === false) {\n    return (\n      <Fragment>\n        Você precisa habilitar a localização no browser o/\n      </Fragment>\n    )\n  } else if (weather === false) {\n    return (\n      <Fragment>\n        Carregando o clima...\n      </Fragment>\n    )\n  } else {\n    return (\n      <Fragment>\n        <h3>Clima nas suas Coordenadas ({weather['weather'][0]['description']})</h3>\n        <hr />\n        <ul>\n          <li>Temperatura atual: {weather['main']['temp']}°</li>\n          <li>Temperatura máxima: {weather['main']['temp_max']}°</li>\n          <li>Temperatura minima: {weather['main']['temp_min']}°</li>\n          <li>Pressão: {weather['main']['pressure']} hpa</li>\n          <li>Humidade: {weather['main']['humidity']}%</li>\n        </ul>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}